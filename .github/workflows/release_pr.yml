name: Create Release Pr
on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs: 
  check-for-new-release:
    runs-on: ubuntu-latest
    outputs:
      NEW_RELEASE: ${{ steps.check_pr.outputs.PR_OPEN}}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Check for open PR to Release Branch
        id: check_pr
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          release_prs=$(gh pr list -B release --json id)
          if [[ "$release_prs" == "[]" ]]; then
            echo "No open release PR"
            echo "PR_OPEN=false" >> "$GITHUB_OUTPUT"
          else
            echo "Release PR open"
            echo "PR_OPEN=true" >> "$GITHUB_OUTPUT"
          fi        
  
  create-release:
    needs: [check-for-new-release]
    if: needs.check-for-new-release.outputs.NEW_RELEASE == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: write    
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Create PR
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
            echo "Opening new PR"
            gh pr create --base release --head main --title "Automatic Release PR" --body "This PR was automatically created by commiting to main" --draft --label DONT_MERGE

      - name: Create Prelease
        uses: ncipollo/release-action@v1
        with:
          name: main
          allowUpdates: true
          generateReleaseNotes: true
          prerelease: true
          tag: WIP

  update-release:
    needs: [check-for-new-release]
    if: needs.check-for-new-release.outputs.NEW_RELEASE == 'false'
    runs-on: ubuntu-latest
    permissions:
      contents: write    
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Update Prelease
        uses: ncipollo/release-action@v1
        with:
          name: main
          allowUpdates: true
          generateReleaseNotes: true
          tag: WIP



